---
- name: Retrieve Ingress config
  kubernetes.core.k8s_info:
    api_version: config.openshift.io/v1
    kind: Ingress
    name: cluster
  register: r_ingress_config

- name: Set ocp apps url
  ansible.builtin.set_fact:
    bootstrap_ocp_apps_url: "{{ r_ingress_config.resources[0].spec.domain }}"

- name: Clone {{ bootstrap_rh_submit_repo }}
  ansible.builtin.git:
    repo: "{{ bootstrap_rh_submit_repo }}"
    dest: ~/elyra_docling_rh_summit
    single_branch: yes
    version: rhpds

- name: Setup post deploy patches
  include_tasks: setup_global_configuration.yml

- name: Setup user namespaces resources
  include_tasks: setup_user_namespace_resources.yml
  loop: "{{ range(0, bootstrap_num_users | int, 1) | list }}"
  loop_control:
    loop_var: n
  vars:
    index: "{{ n | int + 1 }}"

- name: Setup the model project
  ansible.builtin.shell: |
    oc project $SUMMIT_PROJECT

    oc apply -k ./components/minio/base

    export MINIO_API_URL=$(oc get routes -n $SUMMIT_PROJECT -o custom-columns=":spec.host" | grep minio-api)
    envsubst < components/create-bucket-job/base/create-bucket-job-template.yaml > components/create-bucket-job/base/create-bucket-job.yaml
    oc create configmap -n ${SUMMIT_PROJECT} model-config-file
    oc apply -k ./components/create-bucket-job/base

    python -m pip install huggingface_hub=={{ bootstrap_huggingface_hub_version }}
    python components/model-server/download-model.py
    python components/model-server/model-folder-upload.py

    oc apply -f components/model-server/granite2b-conn.yaml
    oc apply -f components/model-server/model-namespace.yaml
    oc apply -f components/model-server/servingruntimes.yaml
    oc apply -f components/model-server/inferenceservice.yaml
  args:
    chdir: ~/elyra_docling_rh_summit
  environment:
    SUMMIT_PROJECT: granite-model-project
  retries: 60
  delay: 10
  register: r_model_project
  until: r_model_project is not failed
