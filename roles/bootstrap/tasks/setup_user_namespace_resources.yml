---
- name: Create user namespaces and edit roles
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', item) | from_yaml }}"
  loop:
  - user-namespace.yml.j2
  - user-namespace-edit.yml.j2

- name: Setup Minio
  ansible.builtin.shell: |
    oc apply -k ./components/minio/base
    export MINIO_API_URL=$(oc get routes -n $SUMMIT_PROJECT -o custom-columns=":spec.host" | grep minio-api)
    envsubst < components/create-bucket-job/base/create-bucket-job-template.yaml > components/create-bucket-job/base/create-bucket-job.yaml
    oc create configmap -n summit-project model-config-file --from-file=IntroToML_Cert.pdf
    oc apply -k ./components/create-bucket-job/base
  args:
    chdir: ~/elyra_docling_rh_summit
  environment:
    SUMMIT_PROJECT: summit-project-{{ bootstrap_user_name_base }}{{ index }}

- name: Setup Openshift AI Workbench
  ansible.builtin.shell: |
    until oc wait --for condition=established crd/datasciencepipelinesapplications.datasciencepipelinesapplications.opendatahub.io; do sleep 2; done
    until oc wait --for condition=established crd/notebooks.kubeflow.org; do sleep 2; done
    oc apply -f components/datascience-pipelines/secret-dashboard-dspa-secret.yaml
    oc apply -f components/datascience-pipelines/dspa.yaml
    oc apply -k ./components/workbenches/base/
  args:
    chdir: ~/elyra_docling_rh_summit
  environment:
    SUMMIT_PROJECT: summit-project-{{ bootstrap_user_name_base }}{{ index }}

- name: Setup Pipeline triggers
  ansible.builtin.shell: |
    oc apply -f components/ocp-pipeline-triggers/
    oc apply -f components/ocp-pipeline-triggers/el-route.yaml
  args:
    chdir: ~/elyra_docling_rh_summit
  environment:
    SUMMIT_PROJECT: summit-project-{{ bootstrap_user_name_base }}{{ index }}